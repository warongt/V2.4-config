#Summary of items in this file over the "stock" / default menu config:
# Additional temps for TPU, PETG. 
# A Cooldown command
# Bed leveing options, which automatically homes the bed before it goes through the leveling procedure
# A "Shutdown" menu option which allows you to safely stop the Rasp Pi and can then turn the machine off.
# At the very bottom of the file I have disabled a bunch of menu items that I did not think were useful.

# If you want to change the order of menu items, adjust the "index" value which applies to whatever sub group those items are in.
# Below you can add additional temps easily using the examples provided. 

#Entries for PETG
[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS
index:3

[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA
index:4

[menu __main __temp __preheat_petg]
type: list
name: Preheat PETG
index:5

[menu __main __temp __preheat_petg __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    
    M140 S85
    M104 S240
    

[menu __main __temp __preheat_petg __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: 
    
    M104 S240
    

[menu __main __temp __preheat_petg __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode:
    
    M140 S85
    

#Entries for TPU
[menu __main __temp __preheat_tpu]
type: list
name: Preheat TPU
index:6

[menu __main __temp __preheat_tpu __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S230

[menu __main __temp __preheat_tpu __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S230

[menu __main __temp __preheat_tpu __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __main __temp __cooldown]
type: command
name: Cooldown
index:7
gcode: 
    M140 S0
    M104 S0

[menu __main __filament __load]
type: command
name: Load Filament
index: 1
gcode:
    LOAD_FILAMENT
    
[menu __main __filament __unload]
type: command
name: Unload Filament
index: 2
gcode:
    UNLOAD_FILAMENT




#Shutdown from: https://klipper.discourse.group/t/shutdown-command-to-the-raspberry/584/3
[delayed_gcode shutdown_machine]
gcode:
     {action_call_remote_method("shutdown_machine")}
initial_duration: 0.0
[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Safely Shutdown
gcode:
     M117 Shutdown_RPI
     M118 Shutdown_RPI
     { menu.exit() }    
     UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1 


################################################
####     Nevermore
################################################



[menu __main __control __aux __nevermoreonoff]
type: command
name: Nevermore {'ON' if printer['fan_generic nevermore'].speed > 0 else 'OFF'}
enable: {'fan_generic nevermore' in printer}
gcode:
    TOGGLE_NEVERMORE
index: 0


############################################################
##### Electronics Fan #####
############################################################

[menu __main __control __aux __electronicsfanonoff]
type: command
name: Hood Fan {'ON' if printer['fan_generic controller_fan'].speed > 0 else 'OFF'}
enable: {'fan_generic controller_fan' in printer}
gcode:
    TOGGLE_ELECTRONICS_FAN
index: 1


#################################################
# LED
#################################################


[menu __main __control __aux]
type: list
name: AUX
#enable: {printer.idle_timeout.state != "Printing"}
index: 0

[menu __main __control __aux __statusledoff]
type: command
name: SB LED Off
gcode:
    STATUS_OFF
index: 2


[menu __main __control __aux __statusled_on]
type: command
name: SB LED On
gcode:
    STATUS_PRINTING
    
index: 3

[menu __main __control __aux __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}
index: 4

[menu __main __control __aux __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}
index: 5

###########################################################################################

# Common parameters available for all menu config sections.
#[menu __some_list __some_name]
#type: disabled
#   Permanently disabled menu element, only required attribute is 'type'.
#   Allows you to easily disable/hide existing menu items.

#[menu some_name]
#type:
#   One of command, input, list, text:
#       command - basic menu element with various script triggers
#       input   - same like 'command' but has value changing capabilities.
#                 Press will start/stop edit mode.
#       list    - it allows for menu items to be grouped together in a
#                 scrollable list.  Add to the list by creating menu
#                 configurations using "some_list" as a prefix - for
#                 example: [menu some_list some_item_in_the_list]
#       vsdlist - same as 'list' but will append files from virtual sdcard
#                 (will be removed in the future)
#name:
#   Name of menu item - evaluated as a template.
#enable:
#   Template that evaluates to True or False.
#index:
#   Position where an item needs to be inserted in list. By default
#   the item is added at the end.

#[menu some_list]
#type: list
#name:
#enable:
#   See above for a description of these parameters.

#[menu some_list some_command]
#type: command
#name:
#enable:
#   See above for a description of these parameters.
#gcode:
#   Script to run on button click or long click. Evaluated as a
#   template.

#[menu some_list some_input]
#type: input
#name:
#enable:
#   See above for a description of these parameters.
#input:
#   Initial value to use when editing - evaluated as a template.
#   Result must be float.
#input_min:
#   Minimum value of range - evaluated as a template. Default -99999.
#input_max:
#   Maximum value of range - evaluated as a template. Default 99999.
#input_step:
#   Editing step - Must be a positive integer or float value. It has
#   internal fast rate step. When "(input_max - input_min) /
#   input_step > 100" then fast rate step is 10 * input_step else fast
#   rate step is same input_step.
#realtime:
#   This attribute accepts static boolean value. When enabled then
#   gcode script is run after each value change. The default is False.
#gcode:
#   Script to run on button click, long click or value change.
#   Evaluated as a template. The button click will trigger the edit
#   mode start or end.
#####################################################################
#       Disable items from stock- uncomment to disable
#####################################################################

[menu __main __octoprint]
type: disabled
#[menu __main __temp]
#type:disabled
#[menu __main __temp __preheat_pla]
#type: disabled
#[menu __main __temp __preheat_abs]
#type: disabled
[menu __main __filament __loadf]
type: disabled
[menu __main __filament __loads]
type: disabled
[menu __main __filament __unloadf]
type: disabled
[menu __main __filament __unloads]
type: disabled
#[menu __main __filament __feed]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __hotend0_target]
#type: disabled
#[menu __main __temp __cooldown]
#type: disabled
# [menu __main __setup __calib __delta_calib_auto]
# type: disabled
# [menu __main __setup __calib __delta_calib_man]
#type: disabled
#[menu __main __control __move_10mm]
#type: disabled
#[menu __main __control __move_01mm]
#type: disabled
#[menu __main __setup __calib __bedprobe]
#type: disabled
#[menu __main __setup __dump]
#type: disabled
#[menu __main __control __fanonoff]
#type: disabled
#[menu __main __setup __calib]
#type: disabled
[menu __main __control __caselightonoff]
type: disabled
[menu __main __control __caselightpwm]
type: disabled