#[include shell_command.cfg]
[include gab-3d-utilities.cfg]
# This file contains pin mappings for the LDO Kit using BigTreeTech Octopus V1 as the main controller.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Octopus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Octopus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include mainsail.cfg]
[include klicky-probe.cfg]
#[include klicky-variables.cfg]
#[include klicky-bed-mesh-calibrate.cfg]
[include stealthburner_leds.cfg]
# [include DisplayMenu.cfg]
[include lcd_tweaks.cfg]
[include Adaptive_Mesh.cfg]
[include Adaptive_Purge.cfg]
[include auto_z.cfg]
[include nozzle_brush.cfg]
[include filament_sensor.cfg]
[include config_backup.cfg]
[include ebb_sb2209.cfg]
[include fan_tach_monitor.cfg]

[exclude_object]



[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_260004000450314D35323820-if00
restart_method: command
##--------------------------------------------------------------------


[mcu rpi]
serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
# axes_map: z, y, x

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#   175,175,30

[input_shaper]
#shaper_freq_x: 46.2  #50.2    #51 #47.4 
#shaper_type_x: mzv
#shaper_freq_y: 57.8    #39.4    #38.4 #38.2   #45  # 51 
#shaper_type_y: 2hump_ei   #mzv  #ei  # 2hump_ei

#shaper_type_x: 2hump_ei
#shaper_freq_x: 82.2
#shaper_type_y: mzv
#shaper_freq_y: 38.8


[printer]
kinematics: corexy
max_velocity: 700  
max_accel: 20000
max_accel_to_decel: 3500
max_z_velocity: 100          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 1000
square_corner_velocity: 9

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

# [firmware_retraction]
# retract_length: 0.5
# # The length of filament (in mm) to retract when G10 is activated,
# # and to unretract when G11 is activated (but see
# # unretract_extra_length below). The default is 0 mm.
# retract_speed: 70
# # The speed of retraction, in mm/s. The default is 20 mm/s.
# unretract_extra_length: 0
# # The length (in mm) of *additional* filament to add when
# # unretracting.
# unretract_speed: 35
# # The speed of unretraction, in mm/s. The default is 10 mm/s.


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG6
position_min: 2
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 351.5

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: -5
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 351.5

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0.3 #-0.35  #-0.325
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
#position_max: 260

##  Uncomment below for 350mm build
position_max: 310

##--------------------------------------------------------------------
position_min: -2
homing_speed: 9           ;20 is quiet but seems too fast, it rams the nozzle probe
second_homing_speed: 8
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

# ##  Connected to MOTOR_6
# ##  Heater - HE0
# ##  Thermistor - T0
# [extruder]
# step_pin: PE2
# dir_pin: !PE3
# enable_pin: !PD4
# ##  Update value below when you perform extruder calibration
# ##  If you ask for 100mm of filament, but in reality it is 98mm:
# ##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
# ##  22.6789511 is a good starting point
# rotation_distance: 22.4521616    #22.6789511   #Bondtech 5mm Drive Gears
# ##  Update Gear Ratio depending on your Extruder Type
# ##  Use 50:10 for Stealthburner/Clockwork 2
# ##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
# ##  Use 80:20 for M4, M3.1
# gear_ratio: 50:10               #CW2
# microsteps: 32
# full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
# nozzle_diameter: 0.400
# filament_diameter: 1.75
# heater_pin: PA2
# ##  Validate the following thermistor type to make sure it is correct
# ##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
# sensor_type: ATC Semitec 104NT-4-R025H42G
# sensor_pin: PF4
# min_temp: 0
# max_temp: 300
# max_power: 1.0
# min_extrude_temp: 170
# #control = pid
# #pid_kp = 26.213
# #pid_ki = 1.304
# #pid_kd = 131.721
# ##  Try to keep pressure_advance below 1.0
# pressure_advance: 0.032
# ##  Default is 0.040, leave stock
# pressure_advance_smooth_time: 0.040
# max_extrude_cross_section: 5
# max_extrude_only_distance: 101

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
# [tmc2209 extruder]
# uart_pin: PE1
# interpolate: false
# run_current: 0.5
# sense_resistor: 0.110
# stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950 
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.8
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769



#####################################################################
#   Fan Control
#####################################################################



# [heater_fan hotend_fan]
# ##  Hotend Fan - CNC_FAN1
# pin: PE5
# max_power: 1.0
# kick_start_time: 0.5
# heater: extruder
# heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

# [controller_fan controller_fan]
# ##  Controller fan - CNC_FAN2
# pin: PD12
# kick_start_time: 0.5
# heater: heater_bed
# fan_speed: 0.4

# [heater_fan exhaust_fan]
# #  Exhaust fan - CNC_FAN3
# pin: PD13
# max_power: 1.0
# shutdown_speed: 0.0
# kick_start_time: 5.0
# heater: heater_bed
# heater_temp: 60
# fan_speed: 1.0

[fan_generic nevermore]
#  Exhaust fan - CNC_FAN3
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[temperature_fan MCU_fan]
##  Controller fan - CNC_FAN2
pin: PD12
control: watermark
max_delta: 8
#sensor_type: temperature_mcu
sensor_type: temperature_host
min_temp: 0
max_temp: 100
target_temp: 60
max_power: 0.2
kick_start_time: 0.5
shutdown_speed: 0


[temperature_fan Pi_fan]
pin: PA8
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
control: watermark
max_delta: 5
sensor_type: temperature_host
min_temp: 0
max_temp: 100
target_temp: 63
max_power: 0.6
kick_start_time: 0.5
shutdown_speed: 0


#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm: true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
# #####################################################################

# [thermistor CMFB103F3950FANT]
# temperature1: 0.0
# resistance1: 32116.0
# temperature2: 40.0
# resistance2: 5309.0
# temperature3: 80.0
# resistance3: 1228.0

[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type:  Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

#####################################################################
#   Probe
#####################################################################

# [probe]
# ##  Inductive Probe - DIAG7
# ##  This probe is not used for Z height, only Quad Gantry Leveling
# pin: PG15
# x_offset: 0
# y_offset: 25.0
# #z_offset: 0
# speed: 8
# samples: 2
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 10
# lift_speed: 20



#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position: 122.25, 349.5                 ;231.75, 350
#speed:100
#z_hop:10
#z_hop_speed:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0075
max_adjust: 10


[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 20, 20
mesh_max: 330, 330
##--------------------------------------------------------------------
fade_start: 1
fade_end: 10.0
probe_count: 7,7
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .01
#relative_reference_index: 24
zero_reference_position: 174.98, 174.98

########################################
# EXP1 / EXP2 (display) pins
########################################

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PE8, EXP1_2=PE7,
#     EXP1_3=PE9, EXP1_4=PE10,
#     EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#     EXP1_7=PE14, EXP1_8=PE15,
#     EXP1_9=<GND>, EXP1_10=<5V>,

#     # EXP2 header
#     EXP2_1=PA6, EXP2_2=PA5,
#     EXP2_3=PB1, EXP2_4=PA4,
#     EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#     EXP2_7=PC15, EXP2_8=<RST>,
#     EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

# [display]
# #  mini12864 LCD Display
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2
# display_group: __voron_display

# [neopixel btt_mini12864]
# #  To control Neopixel RGB in mini12864 display
# pin: EXP1_6
# chain_count: 3
# initial_RED: 0.5
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# color_order: RGB

# ##  Set RGB values on boot up for each Neopixel. 
# ##  Index 1 = display, Index 2 and 3 = Knob
# [delayed_gcode setdisplayneopixel]
# initial_duration: 1
# gcode:
#         SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
#         SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#         SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 






# #####################################################################
# #   Thermals
# #####################################################################

# [temperature_sensor raspberry_pi]
# ## Pi temp
# sensor_type: temperature_host
# max_temp: 100

[temperature_sensor MCU_temp]
## Octopus temp
sensor_type: temperature_mcu
max_temp: 100





#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    STATUS_CALIBRATING_Z
    M117 Homing...
    G28
    M117 QGL...
    QUAD_GANTRY_LEVEL
    M117 Homing...
    G28
    STATUS_READY
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F4000         ; move nozzle away from bed
    #--------------------------------------------------------------------
   
# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# gcode:
#     G32                            ; home all axes
#     G1 Z20 F3000                   ; move nozzle away from bed
#     STATUS_BUSY



[delayed_gcode clear_lcd_message]
gcode:
      M117

# [gcode_macro CLEAR_PROGRESS_BAR]
# gcode:
#       M73 P0
# [delayed_gcode clear_progress_bar]
# gcode:
#        M73 P0                       ; clear GLCD progress bar

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro _CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28 ; home if not already homed
        {% endif %}
        M117 QGL...
        QUAD_GANTRY_LEVEL
#        G28 Z
    {% endif %}

[gcode_macro T0]
gcode:




[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:

      
    G21                            ;Use mmm
    G90                            ;Use absolute coordiantes
    M107                           ;Turn off part fan
    M83                            ;Extruder relative mode
    BED_MESH_CLEAR                 
#    BED_MESH_PROFILE LOAD="Soaked" ;Load mesh for quick start
    STATUS_HEATING
    M117 Warming Up ...
    {% set bedtemp = params.BED|int %}    ; set & wait for bed temp
    M190 S{bedtemp}   
    M109 S190
#    {% set bedtemp = params.BED|int %}
#    G32                            ;home all axes + QGL

    
    STATUS_HOMING
    M117 Homing...
    _CG28

    Attach_Probe_Lock #prevent probe docking until unlocked, from klicky 
    
    #QUAD_GANTRY_LEVEL
    _CQGL

    # STATUS_HOMING
    # G28


    CALIBRATE_Z                    ;automatic z offset

    # # Adjust the G-Code Z offset if needed
    # SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1

    M117 Meshing ...             
    BED_MESH_CALIBRATE             ;Calibrate bed mesh 

    Dock_Probe_Unlock              #removes probe lock


    G0 X175 Y175 Z50 F18000       ; move nozzle away from bed
    STATUS_HEATING
    M117 Heating Up ...
# Parameters
#    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

                                                              
 #   TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    # <insert your routines here>
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    # <insert your routines here>
    M117

    STATUS_CLEANING
    NOZZLE_BRUSH
    STATUS_PRINTING
    ADAPTIVE_PURGE
    M117 Purging ...
#     ; Move to start of line.
#     G1 Z10 F2000
# #    G1 Y3 X3 F18000
#     G1 Y-5 X85 F18000
#     G1 Z0.2 F700
#     ; Print the line.
#     G1 X250 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
# #    G1 Y0 F1000
# #    G1 X60 E9 F1000    ; Print second part of the line.
#     G1 E-0.5 F3000      ; Retract to avoid stringing.
#     G1 Z5 F1000
# #    G1 X59.5 E0 F15000    ; Wipe back to break string.
#     G1 X3 E0 F20000   ; Wipe forward to break string.
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    UPDATE_DELAYED_GCODE ID=clear_lcd_message DURATION=5



# [gcode_macro NOZZLE_BRUSH]
# gcode:
#      NOZZLE_BRUSH


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-8.0 F1800                 ; retract filament


    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    PARK
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
#    BED_MESH_CLEAR
#    UPDATE_DELAYED_GCODE ID=clear_progress_bar DURATION=5
#    CLEAR_PROGRESS_BAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    UPDATE_DELAYED_GCODE ID=nevermore_off DURATION=600
    UPDATE_DELAYED_GCODE ID=clear_lcd_message DURATION=5
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    STATUS_READY
   


[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set bed_position = params.BED_POSITION|default('None') %}
    G28                         # can also be a conditional homing macro
    STATUS_CALIBRATING_Z
    M117 Z-Calibration..
#    ATTACH_PROBE                # a macro for fetching the probe first
    {% if bed_position != 'None' %}
      BASE_CALIBRATE_Z BED_POSITION={bed_position}
    {% else %}
      BASE_CALIBRATE_Z
    {% endif %}
#    DOCK_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
    M117

#######################################################
###   Nevermore Control
#######################################################
[gcode_macro nevermore_on]
gcode:
  SET_FAN_SPEED fan=nevermore speed=1

[gcode_macro nevermore_off]
gcode:
  SET_FAN_SPEED fan=nevermore speed=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
     {% if printer['fan_generic nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=nevermore SPEED=1
    {% endif %}

[delayed_gcode nevermore_off]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0

#######################################################
###   Electronics Fan Control
#######################################################
# [gcode_macro electronics_fan_on]
# gcode:
#   SET_FAN_SPEED fan=controller_fan speed=1

# [gcode_macro electronics_fan_off]
# gcode:
#   SET_FAN_SPEED fan=controller_fan speed=0

# [gcode_macro TOGGLE_ELECTRONICS_FAN]
# gcode:
#      {% if printer['fan_generic controller_fan'].speed > 0 %}
#       SET_FAN_SPEED FAN=controller_fan SPEED=0
#     {% else %}
#       SET_FAN_SPEED FAN=controller_fan SPEED=1
#     {% endif %}

# [delayed_gcode electronics_fan_off]
# gcode:
#     SET_FAN_SPEED FAN=controller_fan SPEED=0

# #######################################################
# ###   Caselight Control
# #######################################################

[gcode_macro caselight_on]
gcode:
  SET_PIN PIN=caselight VALUE=0.3

[gcode_macro caselight_max]
gcode:
  SET_PIN PIN=caselight VALUE=1

[gcode_macro caselight_off]
gcode:
  SET_PIN PIN=caselight VALUE=0

# [gcode_macro TOGGLE_CASELIGHT]
# gcode:
#      {% if printer['output_pin caselight'].value > 0 %}
#       SET_PIN PIN=caselight VALUE= 0
#     {% else %}
#       SET_PIN PIN=caselight VALUE= 1
#     {% endif %}

[delayed_gcode caselight_off]
gcode:
     SET_PIN PIN=caselight VALUE= 0

[gcode_macro MOVE_TO_PURGE_BUCKET]
gcode:
      G1 X300 Y351 Z25 F18000        ; move to purge bucket


[gcode_macro LOAD_FILAMENT]
gcode: |
   {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      SAVE_GCODE_STATE NAME=LOAD_state
      M117 Loading filament..
      M83                            ; set extruder to relative
      G1 E50 F300                    ; load (multiple times to avoid length limit)
 #     G1 E25 F1000
      G1 E50 F300
 #     G1 E50 F300
 #     G1 E50 F300
 #     G1 E50 F300
 #     G1 E50 F1000
 #     G1 E50 F300
      G1 E10 F300
      G1 E-3 F300                    ; short retract
      M117 Filament loaded
      UPDATE_DELAYED_GCODE ID=clear_lcd_message DURATION=20
      RESTORE_GCODE_STATE NAME=LOAD_state
   {% else %}
      { action_respond_info("Filament loading disabled while printing!") }
   {% endif %}


###############################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
   {% if (not(printer.idle_timeout.state == "Printing") or printer.pause_resume.is_paused) %}
      SAVE_GCODE_STATE NAME=UNLOAD_state
      
      M83                            ; set extruder to relative
      G1 E5 F450                     ; quick purge
      G1 E-4 F1800                   ; fast retract
      G1 E-16 F1200                  ; retract
#      SLEEP MS=1000                  ; wait for filament to cool
      G1 E-10 F300                   ; slow retract purge
      G1 E-50 F2000                    ; load (multiple times to avoid length limit)
      G1 E-50 F2000
#      G1 E-50 F2000
#      G1 E-50 F2000
#      G1 E-50 F2000
#      G1 E-50 F2000
      G1 E-50 F2000
      G1 E-50 F2000
      M117 Filament unloaded

      UPDATE_DELAYED_GCODE ID=clear_lcd_message DURATION=10
      RESTORE_GCODE_STATE NAME=UNLOAD_state
   {% else %}
      { action_respond_info("Filament unloading disabled while printing!") }
   {% endif %}   

################################################################################
###     Park Z when done printing ###
################################################################################
[gcode_macro PARK]
gcode:
  {% set z_max = printer.toolhead.axis_maximum.z %}
  {% set z_pos = printer.toolhead.position.z %}
  {% set park_height = 100 %}
  {% if z_pos > (z_max - 10) %}
    M117 Z {z_pos} Cant raise
  {% elif z_pos > park_height + 0.04 %}
    M117 Z {z_pos} goto { (( z_max - 10 - z_pos) * 0.5 ) + z_pos }
    G1 Z { (( z_max - 10 - z_pos) * 0.5 ) + z_pos } F3600
  {% elif z_pos < park_height %}
    M117 Z {z_pos} goto {park_height}
    G1 Z {park_height} F3600
  {% else %}
    M117 Parked
  {% endif %}
    # _PARKXY

[gcode_arcs]
resolution: 0.1

[gcode_macro m201]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
      SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY={speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set corner_speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={corner_speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M900]
gcode:
      SET_PRESSURE_ADVANCE ADVANCE={params.K}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

# [gcode_macro _PARKXY]
# gcode:
#     {% set Y_MAX = printer.toolhead.axis_maximum.y %}
#     {% set X_MIN = printer.toolhead.axis_minimum.x %}
#     G1 Y {Y_MAX -2} X {X_MIN +2} F3000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 53.596
#*# pid_ki = 1.760
#*# pid_kd = 407.996
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.716
#*# pid_ki = 5.291
#*# pid_kd = 60.272
#*#
#*# [stepper_z]
#*# position_endstop = -0.240
#*#
#*# [probe]
#*# z_offset = -0.60
#*#
#*# [bed_mesh Soaked]
#*# version = 1
#*# points =
#*# 	0.111250, 0.121250, 0.126250, 0.083750, 0.115000, 0.127500, 0.118750
#*# 	0.066250, 0.058750, 0.032500, 0.056250, 0.053750, 0.070000, 0.066250
#*# 	0.056250, 0.036250, 0.015000, 0.045000, 0.012500, 0.015000, 0.003750
#*# 	0.057500, 0.043750, 0.018750, 0.000000, -0.007500, 0.000000, 0.003750
#*# 	0.066250, 0.080000, 0.038750, 0.030000, 0.030000, 0.041250, 0.025000
#*# 	0.120000, 0.111250, 0.057500, 0.043750, 0.046250, 0.098750, 0.061250
#*# 	0.167500, 0.181250, 0.147500, 0.131250, 0.123750, 0.138750, 0.117500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 23.3
#*# max_x = 327.98
#*# min_y = 21.32
#*# max_y = 329.12
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 54.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 40
